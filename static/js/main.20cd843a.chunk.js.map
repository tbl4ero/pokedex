{"version":3,"sources":["Spinner.tsx","constants.ts","components/pokecard/PokeCard.styles.ts","components/pokecard/PokeCard.tsx","hooks/useIntersection.ts","components/pokecardlist/header/Header.styles.ts","store/actions/serSearchValue.ts","components/pokecardlist/header/Header.tsx","utils/jsonifyResponse.ts","store/actions/setCards.ts","store/actions/setPokemons.ts","store/actions/thunks/actions.ts","components/pokecardlist/PokeCardList.styles.ts","components/pokecardlist/PokeCardList.tsx","components/pokepage/stats/Stats.config.ts","components/pokepage/stats/Stats.styles.ts","components/pokepage/stats/Stats.tsx","hooks/useHover.ts","components/pokepage/profile/Profile.styles.ts","components/pokepage/profile/Profile.tsx","components/pokepage/pokepage/PokePage.styles.ts","components/samplepage/GoBack.tsx","components/samplepage/SamplePage.styles.ts","components/samplepage/SamplePage.tsx","components/pokepage/pokepage/PokePage.tsx","store/reducers.ts","store/store.ts","App.tsx","index.tsx"],"names":["StyledSpinner","styled","div","AnimatedCircle","svg","Spinner","viewBox","className","cx","cy","r","fill","strokeWidth","stroke","typeColors","normal","bug","grass","fire","poison","water","fighting","flying","ground","rock","ghost","electric","psychic","ice","dragon","dark","steel","fairy","statTypes","hp","attack","defense","speed","feadIn","keyframes","StyledCard","props","background","StyledLink","type","Link","NameTitle","h2","TypesContainer","IdContainer","PokeCard","name","to","types","height","src","sprites","other","front_default","toUpperCase","map","alt","style","color","margin","id","padStart","useIntersection","options","shouldBeHidden","targetRef","useRef","useState","inView","setInView","observer","IntersectionObserver","entries","forEach","entry","intersectionRatio","useEffect","observe","current","HeaderContainer","StyledHeader","css","minimized","SearchField","input","SearchFieldBox","pokeballBeforeAnimation","pokeballBeforeAnimationReverse","pokeballAfterAnimation","pokeballAfterAnimationReverse","zooming","ToggleButton","setSearchValue","query","Header","dispatch","useDispatch","searchValue","useSelector","state","minimize","rootMargin","threshold","ref","onClick","icon","faSearch","alignmentBaseline","opacity","defaultValue","onChange","e","target","value","placeholder","jsonifyResponse","url","a","fetch","headers","mode","then","resp","json","data","setCards","list","cards","setCurrentPokemon","pokemon","setPokemon","localLoader","pokemonData","speciesData","prominent","colors","toString","bgColor","Promise","all","abilities","ability","ads","StyledList","CardGrid","CardList","pokemons","pokemonList","count","setCount","length","counter","fetchAllPokemons","results","filter","RegExp","test","slice","key","padding","statsConfig","plugins","legend","display","tooltip","displayColors","displayTItle","scales","pointLabels","backdropColor","backdropPaddingX","backdropPaddingY","font","size","weight","ticks","maxTicksLimit","beginAtZero","max","grid","lines","width","lineWidth","angleLines","ChartContainer","Stats","radarData","stats","reduce","accum","stat","base_stat","newRadarData","labels","Object","keys","datasets","backgroundColor","borderColor","pointBackgroundColor","pointHitRadius","pointRadius","values","useHover","trackCursor","isHovered","setHovered","x","y","cursorPos","setCursorPos","hoverOptions","onMouseMove","evt","currentTarget","getBoundingClientRect","left","top","clientX","clientY","onTouchStart","ontouchend","onMouseLeave","PageContainer","direction","align","TypeElement","ProfileElement","CenteredBox","CloseTooltipButton","TooltipBox","TooltipElementContainer","li","TooltipTitle","strong","AbilityList","ul","AbilityTitle","ProfileList","AbilityTooltip","tooltipHidden","hideTooltip","tooltipTitle","faWindowClose","tooltipDescription","children","Profile","habitat","effect_entries","language","short_effect","h1","IDTitle","Image","img","GoBackArrow","ArrowBack","GoBack","route","SpinnerContainer","bg","Container","SamplePage","WrappedComponent","match","setData","history","selector","loading","setLoading","params","goBack","PokeComp","PokePage","sampleReducer","initialState","actionKey","action","reducers","currentPokemon","currentAbility","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","Main","fontFamily","minHeight","flexDirection","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20cd843a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Spinner = () => (\r\n  <StyledSpinner>\r\n    <AnimatedCircle viewBox=\"0 0 50 50\">\r\n      <circle\r\n        className=\"path\"\r\n        cx=\"25\"\r\n        cy=\"25\"\r\n        r=\"20\"\r\n        fill=\"none\"\r\n        strokeWidth=\"4\"\r\n        stroke=\"#fff\"\r\n      />\r\n    </AnimatedCircle>\r\n  </StyledSpinner>\r\n\r\n);\r\n\r\nconst StyledSpinner = styled.div`\r\n  width: 50px;\r\n  margin: 10px auto;\r\n`;\r\n\r\nconst AnimatedCircle = styled.svg`\r\n  animation: rotate 2s linear infinite;\r\n  width: 50px;\r\n  height: 50px;\r\n  \r\n  & .path {\r\n    stroke: #5652BF;\r\n    stroke-linecap: round;\r\n    animation: dash 1.5s ease-in-out infinite;\r\n  }\r\n  \r\n  @keyframes rotate {\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @keyframes dash {\r\n    0% {\r\n      stroke-dasharray: 1, 150;\r\n      stroke-dashoffset: 0;\r\n    }\r\n    50% {\r\n      stroke-dasharray: 90, 150;\r\n      stroke-dashoffset: -35;\r\n    }\r\n    100% {\r\n      stroke-dasharray: 90, 150;\r\n      stroke-dashoffset: -124;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Spinner;","export const typeColors: {\r\n  [key: string]: string\r\n} = {\r\n    normal: \"#B9B8A9\",\r\n    bug: \"#C2D21F\",\r\n    grass: \"#8CD751\",\r\n    fire: \"#FA5643\",\r\n    poison: \"#AA5DA1\",\r\n    water: \"#56AEFF\",\r\n    fighting: \"#A75544\",\r\n    flying: \"#79A4FF\",\r\n    ground: \"#EBC956\",\r\n    rock: \"#CDBC72\",\r\n    ghost: \"#7975D6\",\r\n    electric: \"#FDE53C\",\r\n    psychic: \"#FA65B5\",\r\n    ice: \"#96F1FF\",\r\n    dragon: \"#8975FF\",\r\n    dark: \"#8E6956\",\r\n    steel: \"#C4C2DB\",\r\n    fairy: \"#FAADFF\",\r\n  };\r\n  \r\n  export const statTypes: {\r\n    [key: string]: string\r\n  } = {\r\n    hp: \"HP\",\r\n    attack: \"ATK\",\r\n    defense: \"DEF\",\r\n    \"special-attack\": \"Sp. ATK\",\r\n    \"special-defense\": \"Sp. DEF\",\r\n    speed: \"Speed\",\r\n  };\r\n\r\n\r\nexport const pokemonColors: {\r\n  [key: string]: string\r\n} = {\r\n  blue: '#D1E4FF',\r\n  green: '#A6CA9E',\r\n  black: '#4D4B4C',\r\n  brown: '#CEA571',\r\n  gray: '#B0B2C1',\r\n  pink: '#F1C9D2',\r\n  purple: '#61486E',\r\n  red: '#DD534B',\r\n  white: '#E5EBF2',\r\n  yellow: '#F6CC52'\r\n}","import { Link } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nimport { typeColors } from \"../../constants\";\r\n\r\nconst feadIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    margin-bottom: -20px;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const StyledCard = styled.div<{ background: string }>`\r\n  border-radius: 14px;\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n  font-family: \"Roboto\";\r\n  flex-direction: column;\r\n  background: ${props => typeColors[props.background]};\r\n  transition: 0.2s ease-in-out;\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 2px 4px 2px 1px rgb(209 174 209);\r\n  padding: 15px;\r\n  animation: ${feadIn} .3s ease-in-out;\r\n  :hover {\r\n    box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.15);\r\n  }\r\n`;\r\n\r\nexport const TypeElement = styled.div<{ type: string }>`\r\n  display: flex;\r\n  padding: 5px;\r\n  font-weight: 500;\r\n  background: ${(props) => typeColors[props.type]};\r\n  color: white;\r\n  font-size: 13px;\r\n  letter-spacing: .5px;\r\n  margin-left: 5px;\r\n  border: 2px solid white;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const StyledLink = styled(Link)`\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const NameTitle = styled.h2`\r\n  text-align: center;\r\n  letter-spacing: 5px;\r\n  color: #fff;\r\n  text-shadow: -2px 2px 1px black, 0 2px 1px black;\r\n`;\r\n\r\nexport const TypesContainer = styled.div`\r\n  margin-top: auto;\r\n  display: flex;\r\n  align-self: flex-start;\r\n  width: 100%;\r\n`;\r\n\r\nexport const IdContainer = styled.div`\r\n  text-align: right;\r\n  flex: 1;\r\n  font-size: 18px;\r\n  align-self: center;\r\n  color: black;\r\n`;","import React from \"react\";\r\n\r\nimport Spinner from \"../../Spinner\";\r\n\r\nimport {\r\n  TypesContainer,\r\n  NameTitle,\r\n  StyledCard,\r\n  StyledLink,\r\n  IdContainer,\r\n} from \"./PokeCard.styles\";\r\nimport { PokemonCard } from \"./PokeCard.types\";\r\n\r\nconst PokeCard = (props: PokemonCard) => (\r\n  <>\r\n    {props.name ? (\r\n      <StyledLink to={`/pokedex/pokemon/${props.name}`}>\r\n        <StyledCard background={props.types[0].type.name}>\r\n          <img\r\n            height=\"130\"\r\n            src={props.sprites.other[\"official-artwork\"].front_default}\r\n          ></img>\r\n          <NameTitle>{props.name.toUpperCase()}</NameTitle>\r\n          <TypesContainer>\r\n            {props.types.map((type) => (\r\n              <img\r\n                alt=\"\"\r\n                height=\"20\"\r\n                style={{ color: \"black\", margin: \"5px\" }}\r\n                src={`/pokedex/icons/${type.type.name}.svg`}\r\n              />\r\n            ))}\r\n            <IdContainer>#{`${props.id}`.padStart(3, \"0\")}</IdContainer>\r\n          </TypesContainer>\r\n        </StyledCard>\r\n      </StyledLink>\r\n    ) : (\r\n      <Spinner />\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default PokeCard;\r\n","import { useRef, useEffect, useState } from \"react\";\r\n\r\ninterface IntersectionObserverOptions {\r\n  shouldBeHidden?: boolean;\r\n  root?: HTMLElement;\r\n  rootMargin?: string;\r\n  threshold?: number;\r\n}\r\n\r\nconst useIntersection = (\r\n  options: IntersectionObserverOptions = {\r\n    shouldBeHidden: false,\r\n  }\r\n) => {\r\n  const targetRef = useRef<HTMLElement>();\r\n  const [inView, setInView] = useState(null);\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach((entry) => {\r\n      if (entry.intersectionRatio === 0) {\r\n        setInView(false);\r\n      } else {\r\n        setInView(true);\r\n      }\r\n    });\r\n  }, options);\r\n\r\n  useEffect(() => {\r\n    observer.observe(targetRef.current);\r\n  }, []);\r\n\r\n  return [targetRef, inView];\r\n};\r\n\r\nexport default useIntersection;\r\n","import styled, { keyframes, css } from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  height: 100px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledHeader = styled.div<{\r\n  inView: boolean;\r\n  minimized: boolean;\r\n}>`\r\n  display: grid;\r\n  padding: 20px 0;\r\n  -webkit-overflow-scrolling: touch;\r\n  touch-action: none;\r\n  position: ${(props) => !props.inView && \"fixed\"};\r\n  transition: 0.3s ease-in-out;\r\n  cursor: ${(props) => !props.inView && \"pointer\"};\r\n  width: 100%;\r\n  height: 70px;\r\n  box-sizing: border-box;\r\n  box-shadow: none;\r\n  grid-template-columns: 10% auto 10%;\r\n  ${(props) => {\r\n    return (\r\n      !props.inView &&\r\n      css`\r\n      overflow-x: hidden;\r\n      padding ${props.minimized && \"0px\"};\r\n      background: ${!props.minimized && \"#EDEDED\"};\r\n      box-shadow: ${!props.minimized && \"0px -1px 18px 7px rgba(0,0,0,0.65)\"};\r\n      @media(min-width: 800px) {\r\n        height: ${props.minimized && \"70px\"};\r\n      }\r\n      @media(max-width: 800px) {\r\n        padding 20px 0;\r\n        bottom: 0;\r\n        clip: ${props.minimized && \"rect(auto, auto, auto, auto)\"};\r\n\r\n      }`\r\n    );\r\n  }}\r\n`;\r\n\r\nexport const SearchField = styled.input`\r\n  justify-self: center;\r\n  border-radius: 0;\r\n  background: rgba(0, 0, 0, 0);\r\n  color: black;\r\n  outline: none;\r\n  height: 18px;\r\n  margin: auto 0;\r\n  padding: 4px;\r\n  font-family: Roboto;\r\n  caret-color: black;\r\n  border: none;\r\n  font-weight: 700;\r\n  outline: none;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  margin-left: -20px;\r\n  padding-left: 24px;\r\n  ::placeholder {\r\n    color: rgba(0, 0, 0, 0.4);\r\n  }\r\n  :hover {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nexport const SearchFieldBox = styled.div<{\r\n  inView: boolean;\r\n  minimized: boolean;\r\n}>`\r\n  display: ${(props) => (!props.inView && props.minimized ? \"none\" : \"flex\")};\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst pokeballBeforeAnimation = keyframes`\r\n  0% {\r\n  }\r\n  10% {\r\n    border-radius: 0;\r\n  }\r\n  20% {\r\n    border-radius: 0;\r\n    height: 0;\r\n  }\r\n  30% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    left: -1px;\r\n    top: 18px;\r\n  }\r\n  40% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    border: none;\r\n    border-bottom: 2px solid black;\r\n    left: 0;\r\n    top: 18px;\r\n  }\r\n  100% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    left: 0;\r\n    top: 18px;\r\n    border: none;\r\n    border-bottom: 2px solid black;\r\n  }\r\n`;\r\n\r\nconst pokeballBeforeAnimationReverse = keyframes`\r\n  100% {\r\n    border: 2px solid black;\r\n    \r\n  }\r\n  40% {\r\n    border-radius: 0;\r\n  }\r\n  30% {\r\n    border-radius: 0;\r\n    border: 2px solid black;\r\n    height: 0;\r\n  }\r\n  20% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    left: -1px;\r\n    border: 1px solid black;\r\n\r\n    top: 18px;\r\n  }\r\n  10% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    left: 0;\r\n    top: 18px;\r\n    border: 2px solid black;\r\n\r\n  }\r\n  0% {\r\n    transform: rotate(45deg);\r\n    border-radius: 0;\r\n    height: 0;\r\n    width: 40px;\r\n    left: 0;\r\n    top: 18px;\r\n    border: none;\r\n    border-bottom: 1px solid black;\r\n\r\n  }\r\n`;\r\n\r\nconst pokeballAfterAnimation = keyframes`\r\n  0% {\r\n\r\n  }\r\n  100% {    \r\n    background: none;\r\n    transform: rotate(135deg);\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nconst pokeballAfterAnimationReverse = keyframes`\r\n  0% {    \r\n    background: none;\r\n    transform: rotate(135deg);\r\n  }\r\n  100% {\r\n    transform: rotate(0deg);\r\n  }\r\n`;\r\n\r\nconst zooming = keyframes`\r\n  0% {\r\n  }\r\n  50% {\r\n    transform: scale(0.9) rotate(20deg);\r\n\r\n  }\r\n  100% {\r\n    transform: rotate(0deg);\r\n  }\r\n`;\r\n\r\nexport const ToggleButton = styled.div<{ inView: boolean; minimized: boolean }>`\r\n  height: 40px;\r\n  top: 10px;\r\n  margin-left: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.2s ease-in-out;\r\n  width: 40px;\r\n  border: ${(props) =>\r\n    !props.inView && !props.minimized ? \"none\" : \"2px solid black\"};\r\n  background-color: ${(props) =>\r\n    !props.inView && !props.minimized ? \"transparent\" : \"white\"};\r\n  position: fixed;\r\n  border-radius: 50%;\r\n\r\n  ${(props) =>\r\n    !props.inView &&\r\n    css`\r\n      position: fixed;\r\n      top: 15px;\r\n      @media (max-width: 800px) {\r\n        bottom: 15px;\r\n        top: auto;\r\n        transform: scale(0.8);\r\n      }\r\n    `}\r\n\r\n  :before, :after {\r\n    content: \" \";\r\n    position: absolute;\r\n  }\r\n\r\n  :after {\r\n    animation: ${(props) =>\r\n      !props.inView && !props.minimized\r\n        ? css`\r\n            ${pokeballAfterAnimation} .25s linear normal forwards\r\n          `\r\n        : css`\r\n            ${pokeballAfterAnimationReverse} .25s linear normal forwards\r\n          `};\r\n    height: 20px;\r\n    transform-origin: 50% calc(100% - 2px);\r\n    width: 40px;\r\n    border-top-left-radius: 40px;\r\n    border-top-right-radius: 40px;\r\n    background: red;\r\n    display: inline-block;\r\n    border-bottom: 2px solid black;\r\n  }\r\n\r\n  :before {\r\n    animation: ${(props) =>\r\n      !props.inView && props.minimized !== null && !props.minimized\r\n        ? css`\r\n            ${pokeballBeforeAnimation} .3s linear normal forwards\r\n          `\r\n        : css`\r\n            ${pokeballBeforeAnimationReverse} .3s linear normal forwards\r\n          `};\r\n    z-index: 20;\r\n    width: 7px;\r\n    height: 7px;\r\n    top: calc(50% - 4px);\r\n    left: calc(50% - 5px);\r\n    border-radius: 50%;\r\n    background: white;\r\n    border: 2px solid black;\r\n  }\r\n  animation: ${(props) => !props.inView && props.minimized && zooming} 3s\r\n    ease-in-out infinite;\r\n`;\r\n","const setSearchValue = (query: string) => ({\r\n  type: \"SET_SEARCH_QUERY\",\r\n  query,\r\n});\r\n\r\nexport default setSearchValue;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useIntersection from \"../../../hooks/useIntersection\";\r\nimport {\r\n  SearchField,\r\n  StyledHeader,\r\n  ToggleButton,\r\n  SearchFieldBox,\r\n  HeaderContainer,\r\n} from \"./Header.styles\";\r\nimport setSearchValue from \"../../../store/actions/serSearchValue\";\r\nimport StoreInterface from \"../../../types/store.interface\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const { searchValue } = useSelector((state: StoreInterface) => state);\r\n\r\n  const [minimized, minimize] = useState(true);\r\n  const [targetRef, inView] = useIntersection({\r\n    rootMargin: \"20px\",\r\n    threshold: 0,\r\n  }) as any[];\r\n\r\n  return (\r\n    <HeaderContainer ref={targetRef}>\r\n      <StyledHeader inView={inView} minimized={minimized}>\r\n        <div>\r\n          <ToggleButton\r\n            minimized={minimized}\r\n            inView={inView}\r\n            onClick={() => !inView && minimize(!minimized)}\r\n          />\r\n        </div>\r\n        <SearchFieldBox inView={inView} minimized={minimized}>\r\n          <FontAwesomeIcon\r\n            icon={faSearch}\r\n            color=\"#000\"\r\n            alignmentBaseline=\"central\"\r\n            opacity=\"0.4\"\r\n          />\r\n          <SearchField\r\n            defaultValue={searchValue}\r\n            onChange={(e) => dispatch(setSearchValue(e.target.value))}\r\n            placeholder=\"Search pokemon...\"\r\n          />\r\n        </SearchFieldBox>\r\n      </StyledHeader>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const jsonifyResponse = async (url: string) => {\r\n  const data = await fetch(url, {\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n    mode: \"cors\",\r\n  }).then((resp) => resp.json());\r\n  return data;\r\n};\r\n\r\nexport default jsonifyResponse;\r\n","import { PokemonCard } from \"../../components/pokecard/PokeCard.types\";\r\n\r\nexport interface SetCardsAction {\r\n  type: string;\r\n  cards: PokemonCard[];\r\n}\r\n\r\nconst setCards = (list: PokemonCard[]): SetCardsAction => ({\r\n  type: \"SET_CARDS\",\r\n  cards: list,\r\n});\r\n\r\nexport default setCards;","import { Pokemon } from \"../../components/pokepage/PokePage.types\";\r\n\r\nexport interface SetPokemonAction {\r\n  type: string;\r\n  pokemon: Pokemon \r\n};\r\n\r\nconst setCurrentPokemon = (pokemon: Pokemon): SetPokemonAction => ({\r\n  type: \"SET_POKEMON\",\r\n  pokemon,\r\n});\r\n\r\nexport default setCurrentPokemon;","import { prominent } from \"color.js\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { PokemonCard } from \"../../../components/pokecard/PokeCard.types\";\r\nimport { Ability } from \"../../../components/pokepage/PokePage.types\";\r\nimport StoreInterface from \"../../../types/store.interface\";\r\nimport jsonifyResponse from \"../../../utils/jsonifyResponse\";\r\nimport setCards, { SetCardsAction } from \"../setCards\";\r\nimport setCurrentPokemon, { SetPokemonAction } from \"../setPokemons\";\r\n\r\nexport const setPokemon =\r\n  (pokemon: PokemonCard, localLoader: Function) =>\r\n  async (dispatch: ThunkDispatch<StoreInterface, {}, SetPokemonAction>) => {\r\n    const pokemonData = await jsonifyResponse(\r\n      `https://pokeapi.co/api/v2/pokemon/${pokemon}`\r\n    );\r\n\r\n    const speciesData = await jsonifyResponse(\r\n      `https://pokeapi.co/api/v2/pokemon-species/${pokemon}`\r\n    );\r\n\r\n    const bgColor = await prominent(\r\n      pokemonData.sprites.other[\"official-artwork\"].front_default\r\n    ).then((colors) => colors[2].toString());\r\n\r\n    const abilities = await Promise.all([\r\n      ...pokemonData.abilities.map((ability: { ability: Ability }) => {\r\n        return jsonifyResponse(\r\n          `https://pokeapi.co/api/v2/ability/${ability.ability.name}`\r\n        );\r\n      }),\r\n    ]);\r\n\r\n    const data = { ...pokemonData, ...speciesData, bgColor, ads: abilities };\r\n\r\n    dispatch(setCurrentPokemon(data));\r\n\r\n    localLoader(false);\r\n  };\r\n\r\nexport const getCards =\r\n  () => async (dispatch: ThunkDispatch<StoreInterface, {}, SetCardsAction>) => {\r\n    let counter = 0;\r\n\r\n    const fetchAllPokemons: () => Promise<PokemonCard[]> = async () => {\r\n      if (counter >= 1150) {\r\n        return;\r\n      }\r\n      const { results } = await jsonifyResponse(\r\n        `https://pokeapi.co/api/v2/pokemon?limit=50&offset=${counter}`\r\n      );\r\n      let list = await Promise.all([\r\n        ...results.map((url: { url: string }) => jsonifyResponse(url.url)),\r\n      ]);\r\n      list = list.map(({ name, types, sprites, id }: PokemonCard) => ({\r\n        name,\r\n        types,\r\n        sprites,\r\n        id,\r\n      }));\r\n      dispatch(setCards(list));\r\n\r\n      counter += 50;\r\n      return fetchAllPokemons();\r\n    };\r\n\r\n    fetchAllPokemons();\r\n  };\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledList = styled.div`\r\n    max-width: 1400px;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    flex-direction: column;\r\n    margin-top: 40px;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const CardGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, 230px);\r\n    grid-gap: 20px;\r\n    justify-content: center;\r\n`;","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport PokeCard from \"../pokecard/PokeCard\";\r\nimport Header from \"./header/Header\";\r\nimport StoreInterface from \"../../types/store.interface\";\r\nimport { getCards } from \"../../store/actions/thunks/actions\";\r\nimport { StyledList, CardGrid } from \"./PokeCardList.styles\";\r\nimport useIntersection from \"../../hooks/useIntersection\";\r\n\r\nconst CardList = () => {\r\n  const { pokemons, searchValue } = useSelector((state: StoreInterface) => ({\r\n    pokemons: state.pokemonList,\r\n    searchValue: state.searchValue,\r\n  }));\r\n\r\n  const [count, setCount] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [targetRef, inView] = useIntersection({ threshold: 1 });\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      setCount(count+50);\r\n    }\r\n  }, [inView]);\r\n\r\n  useEffect(() => {\r\n    setCount(50);\r\n  }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if(pokemons.length === 0) {\r\n      dispatch(getCards());\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <StyledList>\r\n        <CardGrid>\r\n          {pokemons\r\n            .filter(({ name }) => new RegExp(searchValue).test(name))\r\n            .slice(0, count)\r\n            .map((pokemon) => (\r\n              <PokeCard key={pokemon.name} {...pokemon} />\r\n            ))}\r\n        </CardGrid>\r\n        <div style={{ padding: '5px', margin: '10px 0'}} ref={targetRef}>\r\n        </div>\r\n      </StyledList>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","const statsConfig = {\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltip: {\r\n      displayColors: false,\r\n      displayTItle: false,\r\n    },\r\n  },\r\n  scales: {\r\n    r: {\r\n      pointLabels: {\r\n        backdropColor: \"rgba(0, 0, 0, .5)\",\r\n        backdropPaddingX: 3,\r\n        backdropPaddingY: 1,\r\n        font: {\r\n          size: 16,\r\n          weight: \"700\",\r\n        },\r\n        color: \"white\",\r\n      },\r\n      ticks: {\r\n        display: false,\r\n        maxTicksLimit: 3,\r\n        beginAtZero: true,\r\n        max: 500,\r\n      },\r\n      grid: {\r\n        color: \"white\",\r\n        lines: {\r\n          width: 10,\r\n        },\r\n        lineWidth: 4,\r\n      },\r\n      angleLines: {\r\n        color: \"white\",\r\n        width: 10,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nexport default statsConfig;\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const ChartContainer = styled.div<{ direction?: string, align?: string, margin?: string }>`\r\n  width: 350px;\r\n  position: relative;\r\n  z-index: 10;\r\n  box-sizing: border-box;\r\n  padding: 30px;\r\n  margin: auto;\r\n  @media (max-width: 400px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\nimport statsConfig from \"./Stats.config\";\r\nimport { statTypes } from \"../../../constants\";\r\nimport { ChartContainer } from \"./Stats.styles\";\r\nimport { Pokemon, Stat } from \"../PokePage.types\";\r\n\r\nconst Stats = (props: Pokemon) => {\r\n  const radarData = props.stats.reduce((accum: { [key: string]: number }, current: Stat) => {\r\n    return { ...accum, [statTypes[current.stat.name]]: current.base_stat };\r\n  }, {});\r\n  const newRadarData = {\r\n    labels: [...Object.keys(radarData)],\r\n    datasets: [\r\n      {\r\n        backgroundColor: \"rgba(255,255,255,.55)\",\r\n        borderColor: \"rgb(255,255,255)\",\r\n        pointBackgroundColor: \"rgb(255,255,255)\",\r\n        pointHitRadius: 5,\r\n        pointRadius: 4,\r\n        data: [...Object.values(radarData)],\r\n      },\r\n    ],\r\n  };\r\n  \r\n  return (\r\n    <ChartContainer>\r\n      <Radar type=\"radar\" data={newRadarData} options={statsConfig} />\r\n    </ChartContainer>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import { useState, MouseEvent } from \"react\";\r\n\r\nconst useHover = (trackCursor = false) => {\r\n  const [isHovered, setHovered] = useState(false);\r\n  const [cursorPos, setCursorPos] = useState({ x: 0, y: 0 });\r\n\r\n  return {\r\n    isHovered,\r\n    hoverOptions: {\r\n      onMouseMove: (evt: MouseEvent) => {\r\n        setHovered(true);\r\n        if (trackCursor) {\r\n          const { left, top } = evt.currentTarget.getBoundingClientRect();\r\n          setCursorPos({\r\n            x: evt.clientX - left,\r\n            y: evt.clientY - top,\r\n          });\r\n        }\r\n      },\r\n      onTouchStart: () => {\r\n        setHovered(true);\r\n        if (trackCursor) {\r\n          setCursorPos({\r\n            x: 0,\r\n            y: 0,\r\n          });\r\n        }\r\n      },\r\n      ontouchend: () => setHovered(false),\r\n      onMouseLeave: () => setHovered(false),\r\n    },\r\n    cursorPos,\r\n  };\r\n};\r\n\r\nexport default useHover;\r\n","import styled from \"styled-components\";\r\nimport { typeColors } from \"../../../constants\";\r\n\r\nexport const PageContainer = styled.div<{\r\n  direction?: string;\r\n  align?: string;\r\n  margin?: string;\r\n}>`\r\n  display: flex;\r\n  margin: ${(props) => props.margin || \"0 auto\"};\r\n  ${(props) => props.direction && `flex-direction: ${props.direction}`};\r\n  flex-wrap: wrap;\r\n  z-index: 15;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  justify-content: ${(props) => props.align || \"center\"};\r\n`;\r\n\r\nexport const TypeElement = styled.div<{ type: string }>`\r\n  display: flex;\r\n  padding: 5px;\r\n  background: ${(props) => typeColors[props.type]};\r\n  border-radius: 50%;\r\n  margin-left: 5px;\r\n  border: 2px solid white;\r\n`;\r\n\r\nexport const ProfileElement = styled.div`\r\n  text-transform: uppercase;\r\n  padding: 10px 15px;\r\n  height: 20px;\r\n  margin: 5px;\r\n  background: rgba(255, 255, 255, 0.75);\r\n  font-weight: bolder;\r\n  border-radius: 14px;\r\n  box-shadow: 0 20px 25px -10px rgb(0 0 0 / 15%);\r\n`;\r\n\r\nexport const CenteredBox = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const CloseTooltipButton = styled.div`\r\n  margin-left: auto;\r\n  cursor: pointer;\r\n  font-size: 22px;\r\n  margin-bottom: 10px;\r\n  @media (hover: hover) and (pointer: fine) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const TooltipBox = styled.div<{ cursorPos: { x: number; y: number } }>`\r\n  z-index: 99999;\r\n  position: absolute;\r\n  left: ${(props) => props.cursorPos.x - 10}px;\r\n  bottom: ${(props) => -props.cursorPos.y + 40}px;\r\n  width: 220px;\r\n  @media (hover: none) and (pointer: coarse) {\r\n    left: -25%;\r\n    bottom: 30px;\r\n  }\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  color: black;\r\n  max-width: 300px;\r\n  transform: translate(-40px);\r\n  padding: 10px;\r\n  background: #ffffff;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 4px 16px 2px rgba(0, 0, 0, 0.62);\r\n`;\r\n\r\nexport const TooltipElementContainer = styled.li`\r\n  color: white;\r\n  margin: 5px 0;\r\n  cursor: pointer;\r\n  position: relative;\r\n  display: flex;\r\n  font-size: 18px;\r\n  border-bottom: 2px dashed black;\r\n  padding-bottom: 2px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const TooltipTitle = styled.strong`\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const AbilityList = styled.ul`\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const AbilityTitle = styled.h2`\r\n  color: white;\r\n  font-weight: 500;\r\n  text-shadow: rgb(0 0 0 / 25%) 0px 0px 12px;\r\n`;\r\n\r\nexport const ProfileList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 270px;\r\n  height: 100px;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport useHover from \"../../../hooks/useHover\";\r\nimport {\r\n  PageContainer,\r\n  TypeElement,\r\n  ProfileElement,\r\n  CenteredBox,\r\n  CloseTooltipButton,\r\n  TooltipBox,\r\n  TooltipElementContainer,\r\n  TooltipTitle,\r\n  AbilityTitle,\r\n  AbilityList,\r\n  ProfileList,\r\n} from \"./Profile.styles\";\r\nimport { Pokemon } from \"../PokePage.types\";\r\n\r\ninterface TooltipProps {\r\n  tooltipTitle: string;\r\n  tooltipDescription: string;\r\n  children: string;\r\n}\r\n\r\nconst AbilityTooltip = (props: TooltipProps) => {\r\n  const { isHovered, hoverOptions, cursorPos } = useHover(true);\r\n  const [tooltipHidden, hideTooltip] = useState(false);\r\n\r\n  return (\r\n    <TooltipElementContainer\r\n      {...hoverOptions}\r\n      onTouchStart={() => hideTooltip(false)}\r\n    >\r\n      {isHovered && !tooltipHidden && (\r\n        <TooltipBox cursorPos={cursorPos}>\r\n          <TooltipTitle>{props.tooltipTitle}</TooltipTitle>\r\n          <CloseTooltipButton onClick={() => hideTooltip(true)}>\r\n            <FontAwesomeIcon icon={faWindowClose} />\r\n          </CloseTooltipButton>\r\n          {props.tooltipDescription}\r\n        </TooltipBox>\r\n      )}\r\n      <div>{props.children}</div>\r\n    </TooltipElementContainer>\r\n  );\r\n};\r\n\r\nconst Profile = (props: Pokemon) => {\r\n  return (\r\n    <PageContainer direction=\"column\" margin=\"0\">\r\n      <PageContainer align=\"flex-start\" margin=\"20px 0\">\r\n        {props.types.map((type) => (\r\n          <TypeElement type={type.type.name}>\r\n            <img height=\"20\" src={`pokedex/icons/${type.type.name}.svg`} />\r\n          </TypeElement>\r\n        ))}\r\n      </PageContainer>\r\n      <ProfileList>\r\n        <ProfileElement>Weight: {props.weight}</ProfileElement>\r\n        <ProfileElement>Height: {props.height}</ProfileElement>\r\n        <ProfileElement>Area: {props.habitat.name}</ProfileElement>\r\n      </ProfileList>\r\n      <CenteredBox>\r\n        <AbilityTitle>ABILIITIES:</AbilityTitle>\r\n        <AbilityList>\r\n          {props.ads.map((ability, id: number) => (\r\n            <AbilityTooltip\r\n              tooltipTitle={ability.name}\r\n              tooltipDescription={\r\n                ability.effect_entries.filter(\r\n                  (entry: { language: { name: string } }) =>\r\n                    entry.language.name === \"en\"\r\n                )[0].short_effect\r\n              }\r\n            >\r\n              {ability.name}\r\n            </AbilityTooltip>\r\n          ))}\r\n        </AbilityList>\r\n      </CenteredBox>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NameTitle = styled.h1`\r\n  text-align: center;\r\n  font-size: 80px;\r\n  margin-bottom: 0;\r\n  color: white;\r\n  margin-top: 7px;\r\n  text-shadow: 0 0 12px rgb(0 0 0 / 25%);\r\n  @media (max-width: 640px) {\r\n    font-size: 60px;\r\n  }\r\n`;\r\n\r\nexport const IDTitle = styled.h2`\r\n  text-align: center;\r\n  color: rgba(255, 255, 255, 0.7);\r\n  font-weight: bolder;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  font-size: 45px;\r\n  margin-bottom: 25px;\r\n  text-shadow: 0 0 12px rgb(0 0 0 / 25%);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  margin-right: -80px;\r\n  position: relative;\r\n  @media (max-width: 1120px) {\r\n    max-height: 370px;\r\n    margin-right: -50px;\r\n  }\r\n  @media (max-width: 690px) {\r\n    margin-right: 0;\r\n    max-height: 300px;\r\n  }\r\n`;\r\n\r\nexport const PageContainer = styled.div<{\r\n  direction?: string;\r\n  align?: string;\r\n  margin?: string;\r\n}>`\r\n  display: flex;\r\n  margin: ${(props) => props.margin || \"0 auto\"};\r\n  ${(props) => props.direction && `flex-direction: ${props.direction}`};\r\n  flex-wrap: wrap;\r\n  z-index: 15;\r\n  align-items: flex-start;\r\n  position: relative;\r\n  justify-content: ${(props) => props.align || \"center\"};\r\n`;\r\n","import { ArrowBack } from \"@styled-icons/boxicons-regular/ArrowBack\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GoBackArrow = styled(ArrowBack)`\r\n  margin: 40px;\r\n  cursor: pointer;\r\n  color: rgba(0, 0, 0, 0.2);;\r\n  transition: 0.2s ease-in-out;\r\n  margin-bottom: 0;\r\n  :hover {\r\n    color: rgba(0, 0, 0, 0.6);\r\n  }\r\n`;\r\n\r\nconst GoBack: React.FC<any> = (props) => {\r\n  return <GoBackArrow onClick={props.route} height=\"50\" width=\"50\" />;\r\n};\r\n\r\nexport default GoBack;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst bgAnimation = (color: string) => keyframes`\r\n  from {\r\n    background: #EDEDED;\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    background: ${color};\r\n  }\r\n`;\r\nexport const SpinnerContainer = styled.div`\r\n  margin: auto;\r\n`;\r\n\r\nexport const PageContainer = styled.div<{ bg?: string }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  animation: ${(props) => bgAnimation(props.bg)} 0.6s ease-in-out;\r\n  background-color: rgb(${(props) => props.bg});\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport GoBack from \"./GoBack\";\r\nimport Spinner from \"./../../Spinner\";\r\nimport {\r\n  PageContainer,\r\n  Container,\r\n  SpinnerContainer,\r\n} from \"./SamplePage.styles\";\r\nimport { SamplePageProps } from \"./SamplePage.interface\";\r\nimport StoreInterface from \"../../types/store.interface\";\r\nimport { Pokemon } from \"../pokepage/PokePage.types\";\r\n\r\nconst SamplePage = ({\r\n  WrappedComponent,\r\n  match,\r\n  setData,\r\n  history,\r\n  selector,\r\n}: SamplePageProps) => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n  // @ts-ignore\r\n  const { data }: Pokemon  = useSelector((state: StoreInterface) => ({\r\n  // @ts-ignore\r\n    data: state[selector],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    dispatch(setData(match.params.name, setLoading));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <SpinnerContainer>\r\n          <Spinner />\r\n        </SpinnerContainer>\r\n      ) : (\r\n        <PageContainer bg={data.bgColor}>\r\n          <GoBack route={history.goBack} />\r\n          <Container>\r\n            <WrappedComponent {...data} />\r\n          </Container>\r\n        </PageContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SamplePage;\r\n","import React from \"react\";\r\n\r\nimport Stats from \"../stats/Stats\";\r\nimport Profile from \"../profile/Profile\";\r\nimport { setPokemon } from \"../../../store/actions/thunks/actions\";\r\nimport { NameTitle, Image, PageContainer, IDTitle } from \"./PokePage.styles\";\r\nimport SamplePage from \"../../samplepage/SamplePage\";\r\nimport { Pokemon } from \"../PokePage.types\";\r\nimport { SamplePageProps } from \"../../samplepage/SamplePage.interface\";\r\n\r\nconst PokeComp = (props: Pokemon) => (\r\n  <>\r\n    <NameTitle>{props.name}</NameTitle>\r\n    <IDTitle>#{`${props.id}`.padStart(3, \"0\")}</IDTitle>\r\n    <PageContainer>\r\n      <Profile {...props} />\r\n      <Image src={props.sprites.other[\"official-artwork\"].front_default} />\r\n      <Stats {...props} />\r\n    </PageContainer>\r\n  </>\r\n);\r\n\r\nconst PokePage = (props: SamplePageProps) => (\r\n  <SamplePage\r\n    WrappedComponent={PokeComp}\r\n    color={props.color}\r\n    match={props.match}\r\n    setData={setPokemon}\r\n    selector=\"currentPokemon\"\r\n    history={props.history}\r\n  />\r\n);\r\n\r\nexport default PokePage;\r\n","import { PokemonCard } from \"../components/pokecard/PokeCard.types\";\r\nimport { SetCardsAction } from \"./actions/setCards\";\r\n\r\nconst sampleReducer = (initialState: any, actionKey: string, type: string) => (\r\n  state = initialState,\r\n  action: any\r\n) => {\r\n  if (action.type === type) {\r\n    return action[actionKey];\r\n  }\r\n  return state;\r\n};\r\n\r\n\r\nconst pokemonList = (state: PokemonCard[] = [], action: SetCardsAction) => {\r\n  if (action.type === \"SET_CARDS\") {\r\n    return [...state, ...action.cards];\r\n  }\r\n  return state;\r\n}\r\n\r\nconst reducers = {\r\n  currentPokemon: sampleReducer(null, \"pokemon\", \"SET_POKEMON\"),\r\n  currentAbility: sampleReducer(null, \"ability\", \"SET_ABILITY\"),\r\n  pokemonList,\r\n  loading: sampleReducer(true, \"loading\", \"SET_LOADING\"),\r\n  searchValue: sampleReducer(\"\", \"query\", \"SET_SEARCH_QUERY\"),\r\n};\r\n\r\nexport default reducers;\r\n","import {\r\n  createStore,\r\n  combineReducers,\r\n  compose,\r\n  applyMiddleware,\r\n  Store,\r\n} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"./reducers\";\r\n\r\nimport StoreInterface from '../types/store.interface';\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store: Store<StoreInterface, any> = createStore(\r\n  combineReducers(reducers),\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport CardList from \"./components/pokecardlist/PokeCardList\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport PokePage from \"./components/pokepage/pokepage/PokePage\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nconst Main = () =>  (\n  <div\n    style={{\n      fontFamily: \"Roboto\",\n      minHeight: \"100vh\",\n      background: '#EDEDED',\n      display: \"flex\",\n      flexDirection: \"column\",\n    }}\n  >\n    {\n      <BrowserRouter>\n        <Route path=\"/pokedex/\" exact component={CardList} />\n        <Route path=\"/pokedex/pokemon/:name\" component={PokePage} />\n      </BrowserRouter>\n    }\n  </div>\n);\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}